# `"""
# Django settings for samplesite project.
#
# Generated by 'django-admin startproject' using Django 5.1.2.
#
# For more information on this file, see
# https://docs.djangoproject.com/en/5.1/topics/settings/
#
# For the full list of settings and their values, see
# https://docs.djangoproject.com/en/5.1/ref/settings/
# """

from pathlib import Path

from django.conf.global_settings import STATICFILES_DIRS, ABSOLUTE_URL_OVERRIDES

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-=tmq^(flv8$!!=k(oo@xt-65ha*254nv%aoj10z$uk*wyk%*3o'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 'django.contrib.postgres',

    'captcha',
    'precise_bbcode'

    'bboard',  # 'bboard.apps.BboardConfig',
    'testapp',

    'django_cleanup',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.middlewware.cache.UpdateCacheMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middlewware.cache.FetchFromCacheMiddleware'
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

ROOT_URLCONF = 'samplesite.urls'

TEMPLATES = [
    {
         'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # 'BACKEND': 'django.template.backends.django.jinja2.jinja2',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'samplesite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#         # 'ATOMIC_REQUEST': False,
#         # 'AUTOCOMMIT': True,
#         }
#

    #   'default': {
    #          'ENGINE': 'django.db.backends.postgresql_psycopg2',
    #          'NAME': 'django_db',
    #          'USER': 'db_user',
    #          'PASSWORD': '12345',
    #          'PORT': '5432',
    #   }


AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
    {
        'NAME': 'bboard.validators.NoForbiddenCharsValidator',
        'OPTIONS': {'forbidden_chars': (' ', ', ', '.', ':', ';',)}
    },
]

AUTH_PASSWORD_MODEL = 'testapp.models.AdvUser'

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'ru'

TIME_ZONE = 'Asia/Almaty'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [
    BASE_DIR / 'static'
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# ABSOLUTE_URL_OVERRIDES = {
#     'bboard.rubric': lambda rec: f"{rec.pk}/"
# }


import logging


class RequestLoggingMiddleware:
    def __init__(self, get_response):
        self.get_response = get_response
        logging.basicConfig(filename='request_log.txt', level=logging.INFO)

    def __call__(self, request):
        logging.info(f"Request Method: {request.method}, Path: {request.path}, User: {request.user}")

        response = self.get_response(request)

        return response

THUMBNAIL_ALIASES = {
    'bboard.Bb.picture':{
        'default': {
            'size': (500, 300),
            'crop': 'scale',

        },

    },
    'testapp': {
        'default': {
            'size': (400, 300),
            'crop': 'smart',
            'bw': True,
        },

    },
    '': {
        'default'
    },
    'big': {
        'size': (480, 640),
        'crop': '10,10',

    },
}

THUMBNAIL_DEFAULT_OPTIONS = {
    'quality': 90,
    'subsampling': 1,
}


MESSAGE_STORAGE = 'django.conttrib.messages.storage.cookie.'


#######################
#######  Cache  #######
#######################

CACHES = {
    'default': {
        # 'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
        # 'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        # 'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
        # 'BACKEND': 'django.core.cache.backends.dummy.DummyCache',
        'LOCATION': 'cache_table',
    }
}

# CORS_ALLOWED_ORIGINS = True
CORS_ALLOWED_ORIGINS = [
    'http://www.bboard.kz',
    'http://www.bboard.kz',
    'http://admin.bboard.kz',

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.AllowAny' #по умолчаниюб всем всё доступно

    )
}

